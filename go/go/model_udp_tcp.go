/*
 * PiHole Management API
 *
 * A management webservice to be run locally on a PiHole instance
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"encoding/json"
)



type UdpTcp struct {

	Udp bool `json:"udp"`

	Tcp bool `json:"tcp"`
}

// UnmarshalJSON sets *m to a copy of data while respecting defaults if specified.
func (m *UdpTcp) UnmarshalJSON(data []byte) error {

	type Alias UdpTcp // To avoid infinite recursion
    return json.Unmarshal(data, (*Alias)(m))
}

// AssertUdpTcpRequired checks if the required fields are not zero-ed
func AssertUdpTcpRequired(obj UdpTcp) error {
	elements := map[string]interface{}{
		"udp": obj.Udp,
		"tcp": obj.Tcp,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertUdpTcpConstraints checks if the values respects the defined constraints
func AssertUdpTcpConstraints(obj UdpTcp) error {
	return nil
}
