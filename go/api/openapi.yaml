openapi: 3.0.2
info:
  description: A management webservice to be run locally on a PiHole instance
  title: PiHole Management API
  version: "1.0"
servers:
- url: http://pi.hole:8080/
paths:
  /status:
    get:
      description: Status of the PiHole service and webservice
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: All systems normal
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: PiHole running but not enabled
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: PiHole service is unhealthy or not running
  /status/{action}:
    post:
      parameters:
      - explode: false
        in: path
        name: action
        required: true
        schema:
          example: restart
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: All systems normal
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: PiHole running but not enabled
        "400":
          content:
            text/text:
              schema:
                example: Invalid request
                type: string
          description: Illegal Request
  /gravity:
    get:
      description: Returns a list of all gravity sources
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GravityObj'
                type: array
          description: List of configured Gravity sources
    patch:
      description: Update gravity (equivalent to `pihole -g`)
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GravityObj'
          description: Object unchanged
    post:
      description: Adds a new gravity source
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GravityObj'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GravityObj'
          description: Object unchanged
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GravityObj'
          description: Object updated
  /gravity/{id}:
    delete:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          example: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                example: Object deleted successfully
                type: string
          description: The object was deleted
  /records:
    delete:
      description: Remove a custom record
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRecord'
      responses:
        "200":
          content:
            application/json:
              schema:
                example: Object deleted successfully
                type: string
          description: The object was deleted
    get:
      description: Returns a list of custom DNS records
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Record'
                type: array
          description: List of DNS records
    post:
      description: Add a custom DNS record
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Record'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Record'
                type: array
          description: List of DNS records
        "201":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Record'
                type: array
          description: List of DNS records
components:
  responses:
    records:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Record'
            type: array
      description: List of DNS records
    unchanged:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GravityObj'
      description: Object unchanged
    updated:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GravityObj'
      description: Object updated
    deleted:
      content:
        application/json:
          schema:
            example: Object deleted successfully
            type: string
      description: The object was deleted
  schemas:
    DeleteRecord:
      example:
        domain: endres.io
        type: CNAME
      properties:
        type:
          description: CNAME or A
          example: CNAME
          type: string
        domain:
          description: The domain to resolve
          example: endres.io
          type: string
      required:
      - domain
      - type
      type: object
    Record:
      example:
        domain: google.com
        destination: 8.8.8.8
        type: CNAME
      properties:
        type:
          description: CNAME or A
          example: CNAME
          type: string
        domain:
          description: The domain to resolve
          example: google.com
          type: string
        destination:
          description: The destination IP or DNS record
          example: 8.8.8.8
          type: string
      required:
      - destination
      - domain
      - type
      type: object
    Status:
      example:
        listening: true
        ipv4:
          udp: true
          tcp: true
        ipv6:
          udp: true
          tcp: true
        blocking: true
      properties:
        listening:
          example: true
          type: boolean
        ipv4:
          $ref: '#/components/schemas/UdpTcp'
        ipv6:
          $ref: '#/components/schemas/UdpTcp'
        blocking:
          example: true
          type: boolean
      required:
      - blocking
      - ipv4
      - ipv6
      - listening
      type: object
    UdpTcp:
      example:
        udp: true
        tcp: true
      properties:
        udp:
          example: true
          type: boolean
        tcp:
          example: true
          type: boolean
      required:
      - tcp
      - udp
      type: object
    GravityObj:
      example:
        address: https://pi.hole/adlist.txt
        comment: My adlist for PiHole
        id: 1
      properties:
        id:
          example: 1
          type: integer
        address:
          example: https://pi.hole/adlist.txt
          type: string
        comment:
          example: My adlist for PiHole
          type: string
      required:
      - address
      type: object
